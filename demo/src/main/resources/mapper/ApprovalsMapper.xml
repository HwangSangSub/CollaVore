<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.collavore.app.approvals.mapper.ApprovalsMapper">

	<!-- 템플릿 리스트 -->
	<select id="tempList" resultType="ApprovalstempVO">
		SELECT title
			  ,content
			  ,reg_date
			  ,eat_no
		FROM approvalstemp
		ORDER BY eat_no
	</select>

	<!-- 템플릿 상세 -->
	<select id="readTemp" resultType="ApprovalstempVO"
		parameterType="int">
		SELECT *
		FROM approvalstemp
		WHERE eat_no = #{eatNo}
	</select>
	<!-- -->

	<!-- 템플릿 생성 -->
	<insert id="createApprsTemp" parameterType="ApprovalstempVO">
		<selectKey keyProperty="eatNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(eat_no),0) + 1
			FROM approvalstemp
		</selectKey>
		INSERT INTO approvalstemp (
		eat_no
		,title
		,content
		)
		VALUES (
		#{eatNo}
		,#{title}
		,#{content}
		)
	</insert>
	<!-- -->

	<!-- 템플릿 삭제 -->
	<delete id="deleteTemp" parameterType="int">
		DELETE approvalstemp
		WHERE
		eat_no = #{eatNo}
	</delete>
	<!-- -->

	<!-- 템플릿 수정 -->
	<update id="updateTemp" parameterType="ApprovalstempVO">
		UPDATE approvalstemp
		SET
		title = #{title}
		,content = #{content}
		WHERE eat_no = #{eatNo}
	</update>
	<!-- -->

	<!-- 전자결재를 생성하는 기능 -->
		<!-- approvals테이블에 넣기 -->
	<insert id="createApprsEa" parameterType="ApprovalsVO">
		<selectKey keyProperty="eaNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(approvals.ea_no),0) + 1
			FROM approvals
		</selectKey>
		INSERT INTO approvals(
		approvals.ea_no
		,title
		,eat_no
		,approvals.reg_date
		,content
		,emp_no
		)
		VALUES (
		#{eaNo}
		,#{title}
		,#{eatNo}
		,sysdate
		,#{content}
		,#{drafterEmpNo}
		)
	</insert>
	<!-- -->

		<!-- approvers테이블에 넣기 -->
	<insert id="createApprsEar" parameterType="ApprovalsVO">
		<selectKey keyProperty="earNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(ear_no), 0) + 1 FROM approvers
		</selectKey>
		INSERT ALL
		<foreach index="idx" collection="approvers" item="approvers"
			separator=" ">
			<if
				test="
					  approvers.empNo != null and 
				      approvers.empNo != ''
				     ">
				INTO approvers (
				ear_no
				,ea_no
				,emp_no
				,sort
				,proc_date
				)
				VALUES (
				FIND_APPROVERS_SEQ()
				,#{approvers.eaNo}
				,#{approvers.empNo}
				,#{approvers.sort}
				,sysdate
				)
			</if>
		</foreach>
		SELECT * FROM dual
	</insert>
	<!-- -->
	
	<!-- 나의 진행 중인 전자결재 목록 조회 -->
	<select id="myApprList" parameterType="ApprovalsVO" resultType="ApprovalsVO">
	   select  a.title
      	      ,a.ea_no
      	      ,e.name as "drafterName"
      	      ,a.reg_date
              ,a.status
    from approvals a join employees e
    on a.emp_no = e.emp_no
    where a.emp_no = #{userEmpNo}
    and a.status = #{status}
	ORDER BY a.reg_date
	</select>
	<!--  -->
	
	<!-- //결재 해야할 전결 목록 조회 -->
	<select id="approveList" parameterType="ApprovalsVO" resultType="ApprovalsVO">
	SELECT 
			a.title
           ,e.name
           ,a.reg_date
           ,r.status
    FROM approvals a JOIN employees e
   		 ON a.emp_no = e.emp_no
    JOIN approvers r
  		 ON r.ea_no = a.ea_no
    WHERE r.emp_no = #{userEmpNo}
    AND r.status= #{status}
    ORDER BY a.reg_date
	</select>
	<!--  -->
	
	<!-- 전자결재 상세 조회 -->
	<select id="readApproval" parameterType="Integer" resultType="ApprovalsVO">
		SELECT
			   a.title
			  ,a.content
			  ,a.reg_date
			  ,a.comp_date
			  ,a.emp_no as "drafterEmpNo"
			  ,e.name as "drafterName"
			  ,a.status as "approvalStatus"
		FROM approvals a LEFT JOIN employees e
			ON a.emp_no = e.emp_no
		WHERE a.ea_no = #{eaNo}
	</select>
	<!-- -->

	<!-- 결재자 상세 조회 -->
	<select id="readApprovers" parameterType="Integer" resultType="map">
		 SELECT
				r.status as "approverStatus"
			   ,e.name as "approverName"
			   ,e.emp_no as "approverEmpNo"
			   ,p.name as "positionTitle"
			   ,r.sort
		FROM
			approvals a JOIN approvers r
		ON a.ea_no = r.ea_no
			JOIN employees e
		ON r.emp_no = e.emp_no
            JOIN positions P
        ON e.posi_no = p.posi_no
			WHERE a.ea_no = #{eaNo}
		ORDER BY r.sort
	</select>
	<!-- -->

	<!-- 전자결재 삭제 -->
	<select id="deleteApproval" statementType="CALLABLE" resultType="Integer">
	  {call DELETE_EANO(#{eaNo}, #{resultCode, mode=OUT, jdbcType=INTEGER})}
	</select>
	<!-- -->

	<!-- 인사 테이블 조회 -->
	<select id="employees" resultType="HrmVO">
		SELECT 
				p.posi_no
       		   ,e.name as "empName"
       		   ,p.name as "posiName"
       	       ,e.emp_no
               ,d.name as "deptName"
		FROM 
			employees e JOIN positions p
		ON e.posi_no = p.posi_no 
			JOIN departments d
		ON e.dept_no = d.dept_no
		ORDER by p.posi_no
	</select>
	<!-- -->
</mapper>
<!-- 3번째 -->