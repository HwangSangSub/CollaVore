<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.collavore.app.project.mapper.ProjectMapper">
	<!-- 전체조회 -->
	<select id="selectProjectAll" resultType="ProjectVO">
		SELECT proj_no
		,name
		,content
		,start_date
		,end_date
		,is_template
		,status
		,proj_temp_no
		,project_git_url
		,p_mgr_no
		FROM proj
		ORDER BY proj_no
	</select>
	<!-- 단건조회 -->
	<select id="selectProjectById" resultType="ProjectVO">
		SELECT proj_no,
		name,
		content,
		start_date,
		end_date,
		is_template,
		status,
		proj_temp_no,
		project_git_url,
		p_mgr_no
		FROM proj
		WHERE proj_no = #{projNo}
	</select>
	<!-- 프로젝트 생성 -->
	<insert id="ProjectInsert" parameterType="ProjectVO">
		<selectKey keyProperty="projNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(proj_no), 1000)+1
			FROM proj
		</selectKey>
		INSERT INTO proj(
		proj_no
		,name
		,content
		,start_date
		,end_date
		,is_template
		,status
		,proj_temp_no
		,project_git_url
		,p_mgr_no)
		VALUES(
		#{projNo}
		,#{name}
		,#{content}
		,#{startDate}
		,#{endDate}
		,#{isTemplate}
		,#{status}
		,#{projTempNo}
		,#{projectGitUrl}
		,#{pMgrNo}
		)
	</insert>
	<!-- 수정 -->
	<update id="updateProject">
		UPDATE proj

		SET
		name = #{name}
		,content = #{content}
		,start_date =
		#{startDate}
		,end_date = #{endDate}
		<!--,is_template = #{is_template} -->
		,status = #{status}
		<!-- ,proj_temp_no = #{proj_temp_no} -->
		,project_git_url = #{projectGitUrl}
		,p_mgr_no = #{pMgrNo}

		WHERE proj_no
		= #{projNo}
	</update>
	<!-- 삭제 -->
	<delete id="projectDelete" parameterType="int">
		DELETE FROM proj
		WHERE
		proj_no = #{projNo}
	</delete>

	
	
	<!-- 파일 폴더 전체조회 -->
	<select id="selectfolderAll" resultType="ProjectFoldersVO">
		SELECT PF_NO, 
				NAME, 
				PW_NO, 
				REG_DATE, 
				PARENT_PF_NO
		FROM DBUSER.PROJFOLDERS
		START WITH PARENT_PF_NO = 0  
		CONNECT BY PRIOR PF_NO = PARENT_PF_NO
	</select>
	
	<!-- 파일 전체조회 -->
	<select id="selectfileAll" resultType="ProjectFilesVO">
		SELECT proj_file_no
				, pf_no
				, name
				, content
				, file_size
				, file_path
				, reg_date
				, extension
		FROM projfiles 
		WHERE pf_no = #{pfNo}
	</select>
	
	<!-- 파일 등록 -->
<insert id="fileinsert" parameterType="ProjectFilesVO">
    <selectKey keyProperty="projFileNo" resultType="Integer" order="BEFORE">
        SELECT NVL(MAX(proj_file_no), 0) + 1 FROM projfiles
    </selectKey>
    INSERT INTO projfiles (
        proj_file_no,
        pf_no,
        name,
        content,
        file_size,
        file_path,
        reg_date,
        extension
    ) VALUES (
        #{projFileNo},
        #{pfNo},
        #{name},
        #{content}, 
        #{fileSize},
        #{filePath},
        SYSDATE,
        #{extension}
    )
</insert>

<!-- 단건조회 -->
	<select id="filedetail" resultType="ProjectFilesVO">
		SELECT proj_file_no,
		pf_no,
        name,
        content,
        file_size,
        file_path,
        reg_date,
        extension
		FROM projfiles
		WHERE proj_file_no = #{projFileNo}
	</select>
	
	<!-- 전체조회 -->
	<select id="projecttree" resultType="ProjectVO">
SELECT LEVEL, tree.*
    FROM (
        SELECT 'P' || proj_no as no
            , null as parent_no
            , name
             , 'proj' AS "table"
        FROM proj
        UNION
        SELECT 'W' || pw_no
            ,  'P' || proj_no
            , name
            , 'projwrks' AS "table"

        FROM 
            projwrks
        UNION
        SELECT 
            TO_CHAR(pdw_no)
            , CASE WHEN parent_pdw_no IS NULL THEN 'W' || pw_no ELSE TO_CHAR(parent_pdw_no) END
            , name
             , 'projdwrks' AS "table"

        FROM 
            projdwrks 
    ) tree
    START WITH 
        parent_no IS NULL
    CONNECT BY 
        PRIOR no = parent_no
    ORDER SIBLINGS BY 
        no
	</select>	

	<insert id="ProjectwrkInsert" parameterType="ProjectVO">
		<selectKey keyProperty="pwNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(pw_no), 0)+1
			FROM projwrks
		</selectKey>
		INSERT INTO projwrks(
		pw_no
		,name
		,content
		,job_no
		,mgr_no
		,reg_date
		,proj_no
		<!-- ,sort -->
		)
		VALUES(
		#{pwNo}
		,#{name}
		,#{content}
		,#{jobNo}
		,#{mgrNo}
		,sysdate
		,#{projNo}
		<!-- ,#{sort} -->
		)
	</insert>
	<insert id="ProjectdwrkInsert" parameterType="ProjectVO">
		<selectKey keyProperty="pdwNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(pdw_no), 0)+1
			FROM projdwrks
		</selectKey>
		INSERT INTO projdwrks(
		pdw_no
		,parent_pdw_no
		,name
		,content
		,reg_date
		,is_status
		,start_date
		,req_date
		,comp_date
		,pw_no
		<!-- ,sort -->
		)
		VALUES(
		#{pdwNo}
		,#{parentPdwNo}
		,#{name}
		,#{content}
		,sysdate
		,#{isStatus}
		,#{startDate}
		,#{reqDate}
		,#{compDate}
		,#{pwNo}
		<!-- ,#{sort} -->
		)
	</insert>
	
	<select id="searchPwNo" resultType="int">
		SELECT pw_no
		FROM projdwrks
		WHERE pdw_no = #{pdwNo}
	</select>
	
	
	<!-- 업무 단건조회 -->
	<select id="selectwrkInfo" resultType="ProjectVO">
		SELECT pw_no,
		name,
        content,
        job_no,
        mgr_no,
        reg_date,
        proj_no,
        sort
		FROM projwrks
		WHERE pw_no = #{pwNo}
	</select>
	
	
	<!-- 상세업무 단건조회 -->
	<select id="selectdwrkInfo" resultType="ProjectVO">
		SELECT pdw_no,
		parent_pdw_no,
        name,
        content,
        reg_date,
        is_status,
        start_date,
        req_date,
        comp_date,
        pw_no,
        sort,
        commit_id,
        importance,
        mgr_no
		FROM projdwrks
		WHERE pdw_no = #{pdwNo}
	</select>
	
	<!-- 프로젝트 업무 수정 -->
	<update id="updatewrkProject">
		UPDATE projwrks

		SET
		name = #{name}
		,content = #{content}
		,job_no = #{jobNo}
		,mgr_no = #{mgrNo}
		,reg_date = sysdate
		
		WHERE pw_no
		= #{pwNo}
	</update>
	<!-- 프로젝트 상세 업무 수정 -->
	<update id="updatedwrkProject">
		UPDATE projdwrks

		SET
		name = #{name}
		,content = #{content}
		,is_status = #{isStatus}
		,start_date = #{startDate}
		,comp_date = #{endDate}
		,commit_id = #{commitId}
		,importance = #{importance}
		,mgr_no = #{mgrNo}
		,reg_date = sysdate
		
		WHERE pdw_no
		= #{pdwNo}
	</update>	
</mapper>