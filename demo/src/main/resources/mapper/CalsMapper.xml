<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.collavore.app.cals.mapper.SchsMapper">

	<!--============================== 일정관리 ==================================== -->
	<select id="selectSchsAll" resultType="SchsVO">
		SELECT
		schs.sch_no
		,schs.title
		,schs.start_date
		,schs.end_date
		,schs.cal_no
		,cals.name   <!-- 캘린더 이름을 조인으로 조회 -->
		,cals.cal_type   <!-- 캘린더 타입을 조인으로 조회 -->
		,schs.is_alarm
		FROM
		schs
		JOIN
		cals ON schs.cal_no = cals.cal_no  <!-- schs와 cals 
			테이블 조인 -->
		WHERE
		cals.is_delete = 'h2'  <!-- 삭제되지 않은 일정만 조회 -->
	</select>
	
	<!-- 단건 일정 조회 -->
	<select id="selectSchsInfo" parameterType="SchsVO"
		resultType="SchsVO">
		SELECT
		sch_no
		, title
		,
		start_date
		, end_date
		, cal_no
		, is_alarm
		FROM schs
		<!-- WHERE schNo = #{schNo} AND isDelete = 'h2' 미삭제된 일정만 조회 -->
	</select>



	<insert id="insertSchsInfo" parameterType="SchsVO">
    <selectKey keyProperty="schNo" resultType="Integer" order="BEFORE">
        SELECT NVL(MAX(sch_no), 0) + 1
        FROM schs
    </selectKey>
    INSERT INTO schs (
        sch_no,
        title,
        start_date,
        end_date,
        cal_no,
        is_alarm
    )
    SELECT
        #{schNo},
        #{title},
        #{startDate,jdbcType=TIMESTAMP},
        #{endDate,jdbcType=TIMESTAMP},
        #{calNo},
        #{isAlarm}
    FROM dual
</insert>

	<!-- 캘린더 타입에 따른 cal_no 조회 -->



	<select id="selectCalType" resultType="Integer"
		parameterType="int">
		SELECT cal_no
		FROM cals
		WHERE type = #{type} AND is_delete
		= 'h2'
	</select>

	<!-- <insert id="insertSchsInfo" parameterType="SchsVO"> <selectKey keyProperty="schNo" 
		resultType="Integer" order="BEFORE"> SELECT NVL(MAX(sch_no), 0)+1 FROM schs 
		</selectKey> INSERT INTO schs ( sch_no ,title ,start_Date ,end_date ,cal_no 
		,is_alarm ) VALUES ( #{schNo} ,#{title} ,#{startDate,jdbcType=TIMESTAMP} 
		,#{endDate,jdbcType=TIMESTAMP} ,#{calNo} ,#{isAlarm} ) </insert> -->


	<delete id="deleteSchsInfo" parameterType="int">
		DELETE FROM schs
		WHERE
		sch_no = #{schNo}
	</delete>

	<update id="updateSchsInfo" parameterType="SchsVO">
		UPDATE schs
		SET title =
		#{title},
		start_date = #{startDate},
		end_date = #{endDate},
		cal_no =
		#{calNo},
		is_alarm = #{isAlarm}

		WHERE sch_no = #{schNo}

	</update>

	<!--==============================END 일정관리 ==================================== -->

	<!--==============================개인 캘린더==================================== -->


	<select id="selectTeamCal" resultType="SchsVO">
		SELECT cs.cal_no,
		    c.name || ' ' || CASE 
		        WHEN c.cal_type = 'g1' THEN '(개인)'
		        WHEN c.cal_type = 'g2' THEN '(공유)'
		    ELSE '프로젝트' END AS name
		FROM calshares cs
		    INNER JOIN cals c ON c.cal_no = cs.cal_no
		WHERE cs.emp_no = #{empNo}
			AND c.cal_type = 'g1'
		ORDER BY CASE WHEN c.cal_type = 'g1'  THEN 1 ELSE 9999 END, c.name
	</select>


	<insert id="insertCalsInfo" parameterType="SchsVO">
		<!-- INSERT 전 calNo를 계산하기 위한 selectKey -->
		<selectKey keyProperty="calNo" resultType="Integer"
			order="BEFORE">
			SELECT GREATEST(NVL(MAX(cal_no), 99) + 1, 100)
			FROM cals
		</selectKey>

		INSERT INTO cals (
		cal_no
		, name
		, cal_type
		, reg_date
		, is_delete
		, delete_date
		, color
		)
		VALUES (
		#{calNo}
		, #{name}
		, #{calType}
		, SYSDATE
		, #{isDelete}
		, NULL
		, #{color}
		)
	</insert>


	<!-- 캘린더 정보를 calNo로 가져오는 쿼리 -->
	<update id="updateCalsInfo" parameterType="SchsVO">
		UPDATE cals
		SET
		name =
		#{name},
		color = #{color}
		WHERE cal_no = #{calNo}
	</update>


	<!-- 캘린더를 휴지통으로 이동 (isDelete = 'h1'로 업데이트하고 deleteDate 설정) -->
	<update id="updateCalToTrash" parameterType="int">
		UPDATE cals
		SET
		is_delete = 'h1', delete_date = SYSDATE
		WHERE cal_no = #{calNo}
	</update>


	<!-- 캘린더를 복원 (isDelete = 'h2'로 업데이트하고 deleteDate를 NULL로 설정) -->
	<update id="restoreCalFromTrash" parameterType="int">
		UPDATE cals
		SET
		is_delete = 'h2', delete_date = NULL
		WHERE cal_no = #{calNo}
	</update>




	<!-- 휴지통에 있는 캘린더 조회 -->
	<select id="selectToTrash" resultType="CalsVO">
		SELECT *
		FROM cals
		WHERE
		is_delete = 'h1'
	</select>




	<!-- 캘린더 완전 삭제 -->
	<delete id="permanentlyDeleteCal" parameterType="int">
		DELETE FROM cals
		WHERE cal_no = #{calNo} AND is_delete = 'h1'  <!-- 휴지통에 있는 
			캘린더만 삭제 -->
	</delete>
	<!--==============================END 개인 캘린더 ==================================== -->



</mapper>